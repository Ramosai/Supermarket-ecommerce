/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newpackage;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.UUID;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Mataosane
 */
public class buying extends javax.swing.JFrame {
    Connection conn;
    int newQty, AvailQty;
    String Prid,pname,category;
    Double Price, Total = 0.0, GrdTotal=0.0;
    String cartID = UUID.randomUUID().toString();
    String orderId;
    String orderUserid;
    Date orderDate;
    String orderUsername;
    
    long millis=System.currentTimeMillis();  
       
    java.sql.Date date = new java.sql.Date(millis);       
    

    /**
     * Creates new form buying
     * @param ab
     */
    public buying(String ab) {
        initComponents();
        jLabel7.setText(ab);
        
        table();
        checkCart();
        //addCategory();
         
    }

    private buying() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
        public void table()
{
    try{
        conn=DriverManager.getConnection("jdbc:derby://localhost:1527/super","super","1234");
        Statement st=conn.createStatement();
        
    
        ResultSet Rs = st.executeQuery("Select category, id, pname, quantity, price from products");
        jTable1.setModel(DbUtils.resultSetToTableModel(Rs));
    }catch (SQLException e) {
            JOptionPane.showMessageDialog(this,e);
    }
}
        
            

public void Update()
        {
            newQty = AvailQty - Integer.valueOf(jTextField2.getText());
            //JOptionPane.showMessageDialog(this,newQty);
           
        try{
            conn=DriverManager.getConnection("jdbc:derby://localhost:1527/super","super","1234");
            PreparedStatement ps = conn.prepareStatement("Update products set QUANTITY=? where ID=?");
            
            ps.setInt(1,newQty);
            ps.setString(2,jTextField3.getText());
            int r = ps.executeUpdate();
            jTextField1.setText("");
            jTextField2.setText("");
            jTextField3.setText("");
            
            table();
        }catch(SQLException e)
        {
            JOptionPane.showMessageDialog(this,e);
        }
        
}
 public void checkCart(){
     
     try{
        conn=DriverManager.getConnection("jdbc:derby://localhost:1527/super","super","1234");
        Statement st=conn.createStatement();
        ResultSet Rs = st.executeQuery("Select * from cart where USERID='"+jLabel7.getText()+"' AND STATUS='in-cart' ");
        if(Rs.next()){
            
            cartID = Rs.getString("CARTID");
            ResultSet cartRs = st.executeQuery("Select productid,pname,price,quantity,total from cart where USERID='"+jLabel7.getText()+"' AND STATUS='in-cart'");
            jTable2.setModel(DbUtils.resultSetToTableModel(cartRs));
            
            
            Statement st3=conn.createStatement();
            ResultSet Rs3 = st3.executeQuery("Select productid,pname,price,quantity,total from cart where cartid='"+cartID+"'AND userid='"+jLabel7.getText()+"' AND STATUS='in-cart' ");
                
            while(Rs3.next()){
                Double total = Rs3.getDouble("total");
                GrdTotal += total;
            }
            jLabel6.setText("Total = P" + GrdTotal);
            
        }
     }catch(SQLException e){
        e.printStackTrace();
     }
     
 }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Pick and Pay");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Product Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Quantity");

        jButton1.setText("ADD TO CART");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Category", "Product ID", "Product Name", "Stock Left", "Price"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Order Now");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Product ID");

        jLabel6.setText("Total = P 0.0");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product ID", "Product Name", "Unit price", "Quantity", "Total"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("CART");

        jButton3.setText("Clear Cart");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(50, 50, 50)
                        .addComponent(jButton3)
                        .addGap(58, 58, 58)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jButton2)))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jButton3)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 24, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int Myindex = jTable1.getSelectedRow();
        
        AvailQty = Integer.valueOf(model.getValueAt(Myindex, 3).toString());
        
        
        jTextField3.setText(model.getValueAt(Myindex, 1).toString());
        jTextField1.setText(model.getValueAt(Myindex, 2).toString());
        Price = Double.valueOf(model.getValueAt(Myindex, 4).toString());
        Prid= (model.getValueAt(Myindex, 1).toString());
        pname= (model.getValueAt(Myindex, 2).toString());
        category= (model.getValueAt(Myindex, 0).toString());
        
        
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        if (jTextField1.getText().isEmpty() || jTextField2.getText().isEmpty() || jTextField3.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Product Id, name and quantity are required");
        } else if (AvailQty < Integer.valueOf(jTextField2.getText()) || AvailQty == 0) {
            JOptionPane.showMessageDialog(this, "Not Enough In Stock");
        } else if(Integer.valueOf(jTextField2.getText()) == 0){
            JOptionPane.showMessageDialog(this, "You cannot add 0 quantity to cart");
        }else {
             
            
            
            

            try{
               
                conn=DriverManager.getConnection("jdbc:derby://localhost:1527/super","super","1234");
                 
                Statement st=conn.createStatement(); 
                ResultSet Rs = st.executeQuery("Select * from cart where productid='"+Prid+"' AND cartid='"+cartID+"'AND userid='"+jLabel7.getText()+"' AND STATUS='in-cart' ");

                if(Rs.next()){
                    
                    int cart_quantity = Rs.getInt("quantity");
                    int new_cart_quantity= cart_quantity + Integer.valueOf(jTextField2.getText());
                    Total = Price * new_cart_quantity;
                    
                    try{
                        
                        // updateCart= "Update cart set QUANTITY='"+new_cart_quantity+"' , TOTAL='"+Total+"' where productid='"+Prid+"'AND cartid='"+cartID+"' AND userid='"+jLabel7.getText()+"' ";

                        //st.executeUpdate(updateCart);
                        
                        PreparedStatement ps = conn.prepareStatement("Update cart set QUANTITY=? , TOTAL=? where productid=? AND cartid=? AND userid=? AND STATUS='in-cart' ");
                        //putting value for all placeholder (?)
                        ps.setInt(1,new_cart_quantity);
                        ps.setDouble(2,Total);
                        ps.setString(3,Prid);
                        ps.setString(4,cartID);
                        ps.setString(5,jLabel7.getText());
                        int r = ps.executeUpdate();
            
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(this, e);
                    }
                    
                    conn.close();
                
                    JOptionPane.showMessageDialog(this, "Cart Updated");
                }else{
                    
                    //conn.close();
                    
                    Total = Price * Integer.valueOf(jTextField2.getText());
                    
                    PreparedStatement add = conn.prepareStatement("insert into cart values(?,?,?,?,?,?,?,?,?,?)");
                    add.setString(1,(cartID));
                    add.setString(2, (jLabel7.getText()));
                    add.setString(3,(Prid));
                    add.setString(4,(pname));
                    add.setString(5,category);
                    add.setDouble(6,(Price));
                    add.setInt(7, Integer.valueOf(jTextField2.getText()));
                    add.setDate(8,(date));
                    add.setDouble(9,(Total));
                    add.setString(10,("in-cart"));


                    int r = add.executeUpdate();
                    
                    JOptionPane.showMessageDialog(this, "Product Added to Cart"); 
                    //Update();
                    conn.close();
                }
            
        }
            catch(SQLException e){
                e.printStackTrace();

            }
            
            try{
                conn=DriverManager.getConnection("jdbc:derby://localhost:1527/super","super","1234");
                Statement st=conn.createStatement();
                ResultSet Rs = st.executeQuery("Select productid,pname,price,quantity,total from cart where cartid='"+cartID+"'AND userid='"+jLabel7.getText()+"' AND STATUS='in-cart' ");
                jTable2.setModel(DbUtils.resultSetToTableModel(Rs));
            }catch(SQLException e){
                e.printStackTrace();

            }
            
            
            try{
                conn=DriverManager.getConnection("jdbc:derby://localhost:1527/super","super","1234");
                Statement st=conn.createStatement();
                ResultSet Rs = st.executeQuery("Select productid,pname,price,quantity,total from cart where cartid='"+cartID+"'AND userid='"+jLabel7.getText()+"' AND STATUS='in-cart'");
                GrdTotal = 0.0;
                while(Rs.next()){
                    Double total = Rs.getDouble("total");
                    GrdTotal += total;
                }
            }catch(SQLException e){
                e.printStackTrace();

            }
            
            jLabel6.setText("Total = P" + GrdTotal);
            Update();
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        try{
            
            
            conn=DriverManager.getConnection("jdbc:derby://localhost:1527/super","super","1234");
            Statement st = conn.createStatement();
            
            String checkCart="Select * from cart where cartid='"+cartID+"'AND userid='"+jLabel7.getText()+"' AND STATUS='in-cart'";
            ResultSet rs;
            rs=st.executeQuery(checkCart);
            
            

            
            
                    
                    
                String productID1;
                int cartQuantity1;
                String checkCartPro1;
                ResultSet pro1;
                int productQuantity1;
                int overallQuantity1;
                PreparedStatement ps;
                Statement st1 = conn.createStatement();
                
                while(rs.next()){
                        
                        
                        productID1 = rs.getString("productid");
                        cartQuantity1 = rs.getInt("quantity"); 
                        
                        checkCartPro1="Select * from products where id='"+productID1+"'";
                        pro1= st1.executeQuery(checkCartPro1);
                        
                        while(pro1.next()){
                            
                            productQuantity1 = pro1.getInt("quantity");
                            overallQuantity1 = cartQuantity1+ productQuantity1;
                            
                            ps = conn.prepareStatement("Update products set QUANTITY=? where ID=?");
            
                            ps.setInt(1,overallQuantity1);
                            ps.setString(2,productID1);
                            int r = ps.executeUpdate();
                            
                            
                            
                        }
                }
                String delete = "Delete from cart where cartid='"+cartID+"'AND userid='"+jLabel7.getText()+"' AND STATUS='in-cart'";

                st.executeUpdate(delete);
                jLabel6.setText("Total = P 0.0");
                JOptionPane.showMessageDialog(this, "Cart Cleared");
                conn.close();
                
                try{
                    conn=DriverManager.getConnection("jdbc:derby://localhost:1527/super","super","1234");
                    Statement st2=conn.createStatement();
                    ResultSet Rs = st2.executeQuery("Select productid,pname,price,quantity,total from cart where cartid='"+cartID+"'AND userid='"+jLabel7.getText()+"' AND STATUS='in-cart' ");
                    jTable2.setModel(DbUtils.resultSetToTableModel(Rs));
                }catch(SQLException e){
                    e.printStackTrace();

                }

                table();
                
            
        }catch(SQLException e){
            //e.printStackTrace();        
            JOptionPane.showMessageDialog(this, e);
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        
        try{
            conn=DriverManager.getConnection("jdbc:derby://localhost:1527/super","super","1234");
            Statement st = conn.createStatement();
            
            ResultSet Rs = st.executeQuery("Select * from cart where cartid='"+cartID+"'AND userid='"+jLabel7.getText()+"' AND STATUS='in-cart' ");

                if(Rs.next()){

                    
                    try{
                        

                        
                        PreparedStatement ps = conn.prepareStatement("Update cart set STATUS='ordered' where cartid=? AND userid=? AND STATUS='in-cart' ");
                        //putting value for all placeholder (?)
                        
                        ps.setString(1,cartID);
                        ps.setString(2,jLabel7.getText());
                        int r = ps.executeUpdate();
            
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(this, e);
                    }
                    
                jLabel6.setText("Total = P 0.0");
                
                
                Statement st8 = conn.createStatement();
                ResultSet RsA = st8.executeQuery("Select * from cart where cartid='"+cartID+"'AND userid='"+jLabel7.getText()+"' AND STATUS='ordered' ");

               
                try{
                    
                    /*
                    String orderId;
                    String orderUserid;
                    Date orderDate;
                    String orderUsername;
                    */
                    Statement st9 = conn.createStatement();
                    Statement st10 = conn.createStatement();
                    ResultSet RsB;
                    
                    while(RsA.next()){
                        orderId = RsA.getString("cartid");
                        orderUserid = RsA.getString("userid");
                        orderDate = RsA.getDate("date");


                        RsB = st9.executeQuery("Select * from customer where id='"+orderUserid+"' ");
                        while(RsB.next()){
                            orderUsername = RsB.getString("c_name");
                        }

                    }
                    ResultSet RsF = st10.executeQuery("Select * from orders where id='"+orderId+"' ");
                    if(!(RsF.next())){
                        
                        PreparedStatement addO = conn.prepareStatement("insert into orders values(?,?,?,?,?,?)");
                        addO.setString(1,(orderId));
                        addO.setString(2, (orderUserid));
                        addO.setString(3,(orderUsername));
                        addO.setDate(5,(orderDate));
                        addO.setDouble(4,GrdTotal);
                        addO.setString(6,"ordered");


                        int r = addO.executeUpdate();
                    
                    }
                    
                      

                        
                        
            
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(this, e);
                    }
                
                
                
                
                
                
                
                conn.close();
                
                try{
                    conn=DriverManager.getConnection("jdbc:derby://localhost:1527/super","super","1234");
                    Statement st4=conn.createStatement();
                    ResultSet Rs4 = st4.executeQuery("Select productid,pname,price,quantity,total from cart where cartid='"+cartID+"'AND userid='"+jLabel7.getText()+"' AND STATUS='in-cart' ");
                    jTable2.setModel(DbUtils.resultSetToTableModel(Rs4));
                }catch(SQLException e){
                    e.printStackTrace();

                }
                    
                
                    JOptionPane.showMessageDialog(this, "Your order has been placed, management shall contact you through email about the delivery of goods");
                }else{
                    JOptionPane.showMessageDialog(this, "Cart is empty");
                }
            
        }catch(SQLException e){
            e.printStackTrace();
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(buying.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(buying.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(buying.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(buying.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new buying().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
